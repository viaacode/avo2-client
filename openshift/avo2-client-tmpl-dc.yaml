apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: avo2-client
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      nodeshift/git-branch: master
      nodeshift/git-commit: 4c365fc3dd3057331b775476a41135a5580d8368
    creationTimestamp: null
    generation: 3
    labels:
      app: avo2-client
      ENV: ${ENV}

      component: frontend
      version: 0.1.0
    name: avo2-client-${ENV}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: avo2-client
      ENV: ${ENV}
      component: frontend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          nodeshift/git-branch: master
          nodeshift/git-commit: 4c365fc3dd3057331b775476a41135a5580d8368
        creationTimestamp: null
        labels:
          app: avo2-client
          ENV: ${ENV}
          component: frontend
      spec:
        containers:
        - image: docker-registry.default.svc:5000/sc-avo2/avo2-client@sha256:aeaa45767dc73f4d8c4d802b57252d799e737b4e54bbd68119f9ef689ea491dc
          imagePullPolicy: Always
          name: avo2-client-${ENV}
          env:
            - name: PROXY_URL
              value: ${PROXY_URL}
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "8080"
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources: {}
          securityContext:
            privileged: false
            runAsUser: 101
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - avo2-client-${ENV}
        from:
          kind: ImageStreamTag
          name: avo2-client:${ENV}
          namespace: sc-avo2
        lastTriggeredImage: docker-registry.default.svc:5000/sc-avo2/avo2-client@sha256:aeaa45767dc73f4d8c4d802b57252d799e737b4e54bbd68119f9ef689ea491dc
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      nodeshift/git-branch: master
      nodeshift/git-commit: 4c365fc3dd3057331b775476a41135a5580d8368
    creationTimestamp: null
    labels:
      app: avo2-client
      ENV: ${ENV}
      component: frontend
    name: avo2-client-${ENV}
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: avo2-client
      ENV: ${ENV}
      component: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - name: ENV
    value: dev
  - name: NODE_ENV
    value: production
  - name: PROXY_URL
    value: http://avo2-proxy-qas:3000
