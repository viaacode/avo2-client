apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: avo2-client
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      git-branch: master
      
    creationTimestamp: null
    generation: 4
    labels:
      app: avo2-client
      ENV: ${ENV}
      component: frontend
    name: avo2-client-${ENV}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: avo2-client
      ENV: ${ENV}
      component: frontend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          git-branch: master
        creationTimestamp: null
        labels:
          app: avo2-client
          ENV: ${ENV}
          component: frontend
      spec:
        containers:
        - image: 'avo2-client:int'
          imagePullPolicy: Always
          name: avo2-client-${ENV}
          env:
            - name: PROXY_URL
              value: ${PROXY_URL}
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "8080"
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 66
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1                       
          resources: 
            limits:
              cpu: 800m
              memory: 768Mi
            requests:
              cpu: 200m
              memory: 512Mi          
          securityContext:
            privileged: false
            runAsUser: 101
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - type: "ImageChange" 
      imageChangeParams:
        automatic: false
        containerNames:
          - "avo2-client-${ENV}"
        from:
          kind: "ImageStreamTag"
          name: "avo2-client:int"


  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    creationTimestamp: null
    labels:
      app: avo2-client
      ENV: ${ENV}
      component: frontend
    name: avo2-client-${ENV}
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: avo2-client
      ENV: ${ENV}
      component: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - name: ENV
    value: int
  - name: NODE_ENV
    value: production
  - name: PROXY_URL
    value: http://avo2-proxy-int.sc-avo2.svc:8080
